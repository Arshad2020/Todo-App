{"version":3,"sources":["redux/index.js","ToDoComponent.js","ToDoList.js","FilterButtons.js","App.js","index.js"],"names":["initialState","todoTask","id","completed","text","todos","rootReducer","combineReducers","combinedTodos","state","action","type","length","payload","updatedTodos","map","todo","deleteTodo","filter","deleteAllCompleted","store","createStore","subscribe","console","log","getState","ToDoComponent","handleState","handleRemove","today","Date","className","Checkbox","icon","fontSize","checkedIcon","name","checked","onChange","style","color","fontStyle","textDecoration","date","year","getFullYear","month","toLocaleString","day","getDate","time","getHours","getMinutes","dateFormat","faTimes","onClick","ToDoList","key","FilterButtons","activeTodoCount","setFilter","completedTodosCount","removeCompletedItem","mapDispatchToPtops","addTodos","toggleTodo","removeTodo","removeCompletedTodo","handleInputTodo","value","connect","globalState","props","useState","inputRef","useRef","onSubmit","event","preventDefault","trim","current","focus","ref","target","placeholder","autocomplete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bab4d30d.chunk.js","sourcesContent":["import { combineReducers, createStore } from \"redux\";\n\nexport function addTodos(todo) {\n  return {\n    type: \"ADD_TODOS\",\n    payload: todo,\n  };\n}\nexport function toggleTodo(id) {\n  return {\n    type: \"TOGGLE_TODO\",\n    payload: id,\n  };\n}\n\nexport function removeTodo(id) {\n  return {\n    type: \"REMOVE_TODO\",\n    payload: id,\n  };\n}\nexport function removeCompletedTodo() {\n  return {\n    type: \"REMOVE_COMPLETED_TODO\",\n  };\n}\nexport function handleInputTodo(value) {\n  return {\n    type: \"HANDLE_INPUT_TODO\",\n    payload: value,\n  };\n}\nconst initialState = {\n  todoTask: {\n    id: null,\n    completed: false,\n    text: \"\",\n  },\n  todos: [],\n};\n\nexport function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HANDLE_INPUT_TODO\":\n      return {\n        ...state,\n        todoTask: {\n          ...state.todoTask,\n          id: state.todos.length + 1,\n          text: action.payload,\n        },\n      };\n    case \"ADD_TODOS\":\n      return {\n        ...state,\n        todoTask: { ...state.todoTask, text: \"\" },\n        todos: [...state.todos, action.payload],\n      };\n    case \"TOGGLE_TODO\":\n      const updatedTodos = state.todos.map((todo) => {\n        if (todo.id === action.payload) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      });\n      return { ...state, todos: updatedTodos };\n    case \"REMOVE_TODO\":\n      const deleteTodo = state.todos.filter(\n        (todo) => todo.id !== action.payload\n      );\n      return { ...state, todos: deleteTodo };\n    case \"REMOVE_COMPLETED_TODO\":\n      const deleteAllCompleted = state.todos.filter((todo) => !todo.completed);\n      return { ...state, todos: deleteAllCompleted };\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  combinedTodos: todosReducer,\n});\nconst store = createStore(rootReducer);\nstore.subscribe(() => console.log(store.getState()));\nexport default store;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CircleCheckedFilled from \"@material-ui/icons/CheckCircle\";\nimport CircleUnchecked from \"@material-ui/icons/RadioButtonUnchecked\";\nimport \"./style/styles.scss\";\nfunction ToDoComponent({ todo, handleState, handleRemove }) {\n  const completedStyle = {\n    color: \"#cdcdcd\",\n    fontStyle: \"italic\",\n    textDecoration: \"line-through\",\n  };\n\n  let today = new Date();\n\n  const dateFormat = (date) => {\n    const year = new Date(date).getFullYear();\n    const month = new Date(date).toLocaleString(\"default\", { month: \"long\" });\n    const day = new Date(date).getDate();\n    const time = today.getHours() + \":\" + today.getMinutes();\n    return `${month} ${day} - ${year} - ${time}`;\n  };\n  return (\n    <div className=\"todo-container\">\n      <div className=\"todo-item\">\n        <Checkbox\n          className=\"check-box\"\n          icon={<CircleUnchecked fontSize=\"small\" />}\n          checkedIcon={<CircleCheckedFilled fontSize=\"small\" />}\n          name=\"checkedI\"\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={() => handleState(todo.id)}\n        />\n        <div className=\"todo-row-left\">\n          <p\n            className=\"todo-title\"\n            style={todo.completed ? completedStyle : null}\n          >\n            {todo.text}\n          </p>\n          <p className=\"todo-date\">{dateFormat(today)}</p>\n        </div>\n      </div>\n      <div className=\"todo-bin\">\n        <FontAwesomeIcon icon={faTimes} onClick={() => handleRemove(todo.id)} />\n      </div>\n    </div>\n  );\n}\n\nexport default ToDoComponent;\n","import React from \"react\";\nimport ToDoComponent from \"./ToDoComponent\";\nimport \"./style/styles.scss\";\nfunction ToDoList({ todos, handleRemove, handleState }) {\n  return (\n    <div>\n      {todos.map((todo) => (\n        <ToDoComponent\n          key={todo.id}\n          todo={todo}\n          handleState={handleState}\n          handleRemove={handleRemove}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import React from \"react\";\nimport \"./style/styles.scss\";\n\nfunction FilterButtons({\n  todos,\n  activeTodoCount,\n  setFilter,\n  completedTodosCount,\n  removeCompletedItem,\n}) {\n  return (\n    <div>\n      {todos.length > 0 && (\n        <div className=\"box-shadow\">\n          <div className=\"filter-left-row\">\n            <span className=\"items-count\">\n              {activeTodoCount === 1\n                ? `${activeTodoCount} item remain`\n                : `${activeTodoCount} items remain`}\n            </span>\n\n            <div className=\"filter-buttons\">\n              <button onClick={() => setFilter(\"\")}>All</button>\n              <button onClick={() => setFilter(\"completed\")}>Completed</button>\n              <button onClick={() => setFilter(\"active\")}>Active</button>\n            </div>\n          </div>\n\n          {completedTodosCount > 0 && (\n            <div className=\"clear-button\">\n              <button onClick={removeCompletedItem}>\n                Clear Completed Tasks\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\nexport default FilterButtons;\n","import React, { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport ToDoList from \"./ToDoList\";\nimport FilterButtons from \"./FilterButtons\";\nimport \"./style/styles.scss\";\n\nimport {\n  addTodos,\n  toggleTodo,\n  removeTodo,\n  removeCompletedTodo,\n  handleInputTodo,\n} from \"./redux\";\n\nfunction App(props) {\n  const [filter, setFilter] = useState(\"\");\n\n  const inputRef = useRef(null);\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n    props.handleInputTodo(value);\n  };\n\n  function handleAdd() {\n    if (props.todoTask.text.trim() === \"\") return;\n    props.addTodos(props.todoTask);\n\n    inputRef.current.focus();\n  }\n  function handleRemove(id) {\n    props.removeTodo(id);\n  }\n\n  function removeCompletedItem() {\n    props.removeCompletedTodo();\n  }\n\n  function handleState(id) {\n    props.toggleTodo(id);\n  }\n  const activeTodoCount = props.todos.filter(function (todo) {\n    return !todo.completed;\n  }).length;\n\n  const completedTodosCount = props.todos.filter(function (todo) {\n    return todo.completed;\n  }).length;\n\n  return (\n    <div>\n      <h1>Todos</h1>\n      <form\n        className=\"todo-list\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleAdd();\n        }}\n      >\n        <div className=\"input-box\">\n          <input\n            className=\"input-editor\"\n            ref={inputRef}\n            type=\"text\"\n            id=\"todo-list\"\n            name=\"todo-list\"\n            value={props.todoTask.text}\n            onChange={handleChange}\n            placeholder=\"What needs to be done?\"\n            autocomplete=\"off\"\n          />\n        </div>\n\n        {filter === \"\" && (\n          <ToDoList\n            todos={props.todos}\n            handleState={handleState}\n            handleRemove={handleRemove}\n          />\n        )}\n        {filter === \"completed\" && (\n          <ToDoList\n            todos={props.todos.filter((todo) => todo.completed)}\n            handleState={handleState}\n            handleRemove={handleRemove}\n          />\n        )}\n        {filter === \"active\" && (\n          <ToDoList\n            todos={props.todos.filter((todo) => !todo.completed)}\n            handleState={handleState}\n            handleRemove={handleRemove}\n          />\n        )}\n        <FilterButtons\n          todos={props.todos}\n          activeTodoCount={activeTodoCount}\n          setFilter={setFilter}\n          completedTodosCount={completedTodosCount}\n          removeCompletedItem={removeCompletedItem}\n        />\n      </form>\n      <div className=\"footer-section\">\n        <p>Double-click to edit a todo</p>\n        <p>Created by Arshad2020</p>\n        <p>Part of TodoMVC</p>\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = (globalState) => {\n  return {\n    todos: globalState.combinedTodos.todos,\n    todoTask: globalState.combinedTodos.todoTask,\n  };\n};\n\nconst mapDispatchToPtops = {\n  addTodos: addTodos,\n  toggleTodo: toggleTodo,\n  removeTodo: removeTodo,\n  removeCompletedTodo: removeCompletedTodo,\n  handleInputTodo: handleInputTodo,\n};\n\nexport default connect(mapStateToProps, mapDispatchToPtops)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport store from \"./redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}